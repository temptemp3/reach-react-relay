{"version":3,"sources":["build/index.main.mjs","App.js","reportWebVitals.js","index.js"],"names":["_version","_backendVersion","getExports","s","reachStdlib","_getViews","viewlib","infos","views","_getMaps","mapDataTy","T_Tuple","Alice","ctc","interact","undefined","sendrecv","Promise","reject","Error","stdlib","ctc0","T_UInt","ctc1","T_Address","v15","protect","amt","getRelay","at","fs","msg","who","v19","args","evt_cnt","funcNum","onlyIf","out_tys","pay","sim_p","txn1","sim_r","txns","mapRefs","mapsPrev","mapsNext","data","v21","v22","time","secs","from","push","kind","tok","isHalt","soloSend","timeoutAt","tys","waitIfNotPresent","v27","recv","txn2","v32","v35","addressEq","assert","Relay","iam","getBob","v31","checkedBigNumberify","UInt_max","v33","to","_Connectors","ALGO","appApproval","appClear","escrow","mapDataKeys","mapDataSize","unsupported","version","viewKeys","viewSize","ETH","ABI","Bytecode","BytecodeLen","Which","deployMode","process","REACT_APP_NETWORK_PROVIDER","REACT_APP_NETWORK","loadStdlib","setProviderByName","setSignStrategy","App","acc","useState","relay","state","setState","query","setQuery","handleChange","target","name","value","parseInt","handleConnect","a","console","log","getDefaultAccount","connector","setGasLimit","getAddress","addr","balanceOf","balAtomic","bal","formatCurrency","handleFaucet","getFaucet","faucet","transfer","parseCurrency","handleAlice","deploy","backend","createAccount","accRelay","minimumBalance","networkAccount","sk","setTimeout","getInfo","ctcInfo","AMT","handleBob","INFO","ADDR","SK","MNE","newAccountFromMnemonic","newAccountFromSecret","Uint8Array","split","map","el","ctcRelay","attach","Container","Row","className","Col","toUpperCase","xs","href","ButtonGroup","as","size","Button","onClick","variant","Form","Control","type","placeholder","onChange","disabled","mnemonic","phrase","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f78f485a.chunk.js","sourcesContent":["// Automatically generated with Reach 0.1.3\n/* eslint-disable */\nexport const _version = '0.1.3';\nexport const _backendVersion = 1;\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  \n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  \n  };\n\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\n\nexport async function Alice(ctc, interact) {\n  if (typeof(ctc) !== 'object' || ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for Alice expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Alice expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  \n  \n  \n  const v15 = stdlib.protect(ctc0, interact.amt, 'for Alice\\'s interact field amt');\n  \n  const v19 = stdlib.protect(ctc1, await interact.getRelay(), {\n    at: './index.rsh:42:26:application',\n    fs: ['at ./index.rsh:39:15:application call to [unknown function] (defined at: ./index.rsh:39:19:function exp)'],\n    msg: 'getRelay',\n    who: 'Alice'\n    });\n  \n  const txn1 = await (ctc.sendrecv({\n    args: [v15, v19],\n    evt_cnt: 2,\n    funcNum: 1,\n    onlyIf: true,\n    out_tys: [ctc0, ctc1],\n    pay: [v15, []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const [v21, v22] = txn1.data;\n      const v25 = txn1.time;\n      const v26 = txn1.secs;\n      const v20 = txn1.from;\n      \n      sim_r.txns.push({\n        amt: v21,\n        kind: 'to',\n        tok: undefined\n        });\n      const v27 = v22;\n      sim_r.isHalt = false;\n      \n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0, ctc1],\n    waitIfNotPresent: false\n    }));\n  const [v21, v22] = txn1.data;\n  const v25 = txn1.time;\n  const v26 = txn1.secs;\n  const v20 = txn1.from;\n  ;\n  const v27 = v22;\n  const txn2 = await (ctc.recv({\n    evt_cnt: 1,\n    funcNum: 2,\n    out_tys: [ctc1],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const [v33] = txn2.data;\n  const v36 = txn2.time;\n  const v37 = txn2.secs;\n  const v32 = txn2.from;\n  ;\n  const v35 = stdlib.addressEq(v27, v32);\n  stdlib.assert(v35, {\n    at: './index.rsh:54:11:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Alice'\n    });\n  ;\n  return;\n  \n  \n  };\nexport async function Relay(ctc, interact) {\n  if (typeof(ctc) !== 'object' || ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for Relay expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Relay expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  \n  \n  \n  const txn1 = await (ctc.recv({\n    evt_cnt: 2,\n    funcNum: 1,\n    out_tys: [ctc0, ctc1],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const [v21, v22] = txn1.data;\n  const v25 = txn1.time;\n  const v26 = txn1.secs;\n  const v20 = txn1.from;\n  ;\n  const v27 = ctc.iam(v22);\n  const v31 = stdlib.protect(ctc1, await interact.getBob(), {\n    at: './index.rsh:52:45:application',\n    fs: ['at ./index.rsh:51:15:application call to [unknown function] (defined at: ./index.rsh:51:19:function exp)'],\n    msg: 'getBob',\n    who: 'Relay'\n    });\n  \n  const txn2 = await (ctc.sendrecv({\n    args: [v21, v27, v31],\n    evt_cnt: 1,\n    funcNum: 2,\n    onlyIf: true,\n    out_tys: [ctc1],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn2) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const [v33] = txn2.data;\n      const v36 = txn2.time;\n      const v37 = txn2.secs;\n      const v32 = txn2.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v35 = stdlib.addressEq(v27, v32);\n      stdlib.assert(v35, {\n        at: './index.rsh:54:11:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'Relay'\n        });\n      sim_r.txns.push({\n        amt: v21,\n        kind: 'from',\n        to: v33,\n        tok: undefined\n        });\n      sim_r.txns.push({\n        kind: 'halt',\n        tok: undefined\n        })\n      sim_r.isHalt = true;\n      \n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0, ctc1, ctc1],\n    waitIfNotPresent: false\n    }));\n  const [v33] = txn2.data;\n  const v36 = txn2.time;\n  const v37 = txn2.secs;\n  const v32 = txn2.from;\n  ;\n  const v35 = stdlib.addressEq(v27, v32);\n  stdlib.assert(v35, {\n    at: './index.rsh:54:11:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Relay'\n    });\n  ;\n  return;\n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 4\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nsubstring 0 32\nstore 1\nsubstring 32 64\nstore 2\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\ndup\nbz ctor\n// Handler 1\ndup\nint 1\n==\nbz l0\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 0\n==\nassert\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 40\n==\nassert\ndup\nsubstring 0 8\nbtoi\nstore 255\ndup\nsubstring 8 40\nstore 254\npop\n// compute state in HM_Check 0\nint 8\nbzero\nsha256\nload 1\n==\nassert\n// \"CheckPay\"\n// \"./index.rsh:45:11:dot\"\n// \"[]\"\nload 255\ndup\nbz l1\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Receiver\n==\nassert\nl1:\npop\nload 254\nstore 253\n// compute state in HM_Set 1\nbyte base64(AAAAAAAAAAE=)\nload 255\nitob\nconcat\nload 253\nconcat\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0:\n// Handler 2\ndup\nint 2\n==\nbz l2\npop\ntxna ApplicationArgs 1\ndup\nlen\nint 40\n==\nassert\ndup\nsubstring 0 8\nbtoi\nstore 255\ndup\nsubstring 8 40\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 32\n==\nassert\ndup\nstore 253\npop\n// compute state in HM_Check 1\nbyte base64(AAAAAAAAAAE=)\nload 255\nitob\nconcat\nload 254\nconcat\nsha256\nload 1\n==\nassert\n// \"CheckPay\"\n// \"./index.rsh:54:11:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:54:11:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 255\ndup\nbz l3\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nload 253\ndig 1\ngtxns Receiver\n==\nassert\nl3:\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 2\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl4:\npop\nglobal ZeroAddress\nstore 1\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl2:\nint 0\nassert\nupdateState:\nbyte base64()\nload 1\nload 2\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nbyte base64()\nint 64\nbzero\napp_global_put\nb checkSize\nctor:\ntxn Sender\nglobal CreatorAddress\n==\nassert\ntxna ApplicationArgs 1\nstore 2\n// compute state in HM_Set 0\nint 8\nbzero\nsha256\nstore 1\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\n`,\n  appClear: `#pragma version 4\nint 0\n`,\n  escrow: `#pragma version 4\nglobal GroupSize\nint 1\n-\ndup\ngtxns TypeEnum\nint appl\n==\nassert\ngtxns ApplicationID\nint {{ApplicationID}}\n==\nassert\ndone:\nint 1\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  unsupported: [],\n  version: 2,\n  viewKeys: 0,\n  viewSize: 0\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"svs\",\n            \"type\": \"bool\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"svs\",\n            \"type\": \"bool\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v27\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T4\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T5\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v27\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T4\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T5\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x60806040526040516104b33803806104b38339810160408190526100229161016a565b6040517f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208101909152600081527f812d89bbecdb831b7c696e0f6d1d65802064f5369bdf51a69f331289b592a875826040516100ae9190815115158152602091820151805183830152909101516001600160a01b0316604082015260600190565b60405180910390a16020820151516100c99034146007610141565b6020808301518101516001600160a01b031682526040805180820190915260008082529181019190915260208084015151825282516001600160a01b03168282015260405161011d916001918491016101eb565b60408051601f1981840301815291905280516020909101206000555061024f915050565b816101665760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b6000818303606081121561017d57600080fd5b610185610219565b8351801515811461019557600080fd5b81526040601f19830112156101a957600080fd5b6101b1610219565b6020850151815260408501519092506001600160a01b03811681146101d557600080fd5b6020838101919091528101919091529392505050565b828152606081016102126020830184805182526020908101516001600160a01b0316910152565b9392505050565b604080519081016001600160401b038111828210171561024957634e487b7160e01b600052604160045260246000fd5b60405290565b6102558061025e6000396000f3fe6080604052600436106100225760003560e01c80637fb18f2a1461002e57600080fd5b3661002957005b600080fd5b61004161003c3660046101a3565b610043565b005b60405161007f9061005b90600190849060200161020b565b6040516020818303038152906040528051906020012060001c60005414600a61013c565b600080556040517f64c884d68d4ee0e8add32a46eda9d91129f02187972af27384ef25558bea3c52906100b39083906101dd565b60405180910390a16100c73415600861013c565b6100ec336100db6040840160208501610181565b6001600160a01b031614600961013c565b6100fc6060820160408301610181565b6040516001600160a01b039190911690823580156108fc02916000818181858888f19350505050158015610134573d6000803e3d6000fd5b506000805533ff5b816101615760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b80356001600160a01b038116811461017c57600080fd5b919050565b60006020828403121561019357600080fd5b61019c82610165565b9392505050565b6000606082840312156101b557600080fd5b50919050565b803582526001600160a01b036101d360208301610165565b1660208301525050565b606081016101eb82846101bb565b6001600160a01b036101ff60408501610165565b16604083015292915050565b8281526060810161019c60208301846101bb56fea2646970667358221220137a596abd372768b0944babb5b2596be8084d5059967fa9655823bf1b2f78ea64736f6c63430008050033`,\n  BytecodeLen: 1203,\n  Which: `oD`,\n  deployMode: `DM_firstMsg`,\n  version: 1,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n","import { useState } from 'react'\r\nimport * as backend from './build/index.main.mjs';\r\nimport { loadStdlib } from '@reach-sh/stdlib';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Form from 'react-bootstrap/Form'\r\nimport './App.css'\r\n\r\nconst { REACT_APP_NETWORK_PROVIDER, REACT_APP_NETWORK } = process.env\r\n\r\nconst stdlib = loadStdlib(REACT_APP_NETWORK)\r\n\r\nif (REACT_APP_NETWORK_PROVIDER !== 'LocalHost') {\r\n  stdlib.setProviderByName(REACT_APP_NETWORK_PROVIDER)\r\n}\r\n\r\nif (REACT_APP_NETWORK === 'ALGO') {\r\n  stdlib.setSignStrategy('mnemonic')\r\n}\r\n\r\nconst hasFaucet = (acc) => true\r\n  && REACT_APP_NETWORK === 'ETH'\r\n  && REACT_APP_NETWORK_PROVIDER === 'LocalHost'\r\n  && acc\r\n\r\nfunction App() {\r\n\r\n  const title = 'relay'\r\n\r\n  const [state, setState] = useState({\r\n    acc: null,\r\n    relay: {}\r\n  })\r\n\r\n  const [query, setQuery] = useState({})\r\n\r\n  const handleChange = ({ target }) => {\r\n    let { name, value } = target\r\n    switch (name) {\r\n      case 'AMT':\r\n      case 'INFO':\r\n        value = parseInt(value)\r\n        break\r\n      case 'SK':\r\n      case 'ADDR':\r\n      case 'MNE':\r\n      default:\r\n        break\r\n    }\r\n    setQuery({ ...query, [name]: value })\r\n  }\r\n\r\n  const handleConnect = async () => {\r\n    console.log(\"Connecting ...\")\r\n    const acc = await stdlib.getDefaultAccount()\r\n    if (stdlib.connector === 'ETH') {\r\n      acc.setGasLimit(5000000);\r\n    }\r\n    const addr = await acc.getAddress();\r\n    const balAtomic = await stdlib.balanceOf(acc);\r\n    const bal = stdlib.formatCurrency(balAtomic, 4);\r\n    setState({\r\n      ...state,\r\n      acc,\r\n      addr,\r\n      balAtomic,\r\n      bal\r\n    })\r\n  }\r\n\r\n  const handleFaucet = async () => {\r\n    console.log(\"Faucet ...\")\r\n    const faucet = await stdlib.getFaucet()\r\n    await stdlib.transfer(\r\n      faucet,\r\n      state.acc,\r\n      stdlib.parseCurrency('100')\r\n    )\r\n    const balAtomic = await stdlib.balanceOf(state.acc);\r\n    const bal = stdlib.formatCurrency(balAtomic, 4);\r\n    setState({\r\n      ...state,\r\n      bal,\r\n      balAtomic\r\n    })\r\n  }\r\n\r\n  const handleAlice = async () => {\r\n    console.log(\"Handling alice ...\")\r\n    const ctc = state.acc.deploy(backend)\r\n    //const accRelay = await stdlib.newTestAccount(0);\r\n    const accRelay = await stdlib.createAccount();\r\n    stdlib.transfer(state.acc, accRelay, stdlib.minimumBalance);\r\n    console.log({ accRelay })\r\n    console.log(accRelay.networkAccount.addr)\r\n    console.log(accRelay.networkAccount.sk)\r\n    setTimeout(async () =>\r\n      setState({\r\n        ...state,\r\n        ctc,\r\n        ctcInfo: await ctc.getInfo(),\r\n        relay: {\r\n          acc: accRelay,\r\n        },\r\n      }), 5000)\r\n    await backend.Alice(ctc, {\r\n      amt: stdlib.parseCurrency(query.AMT),\r\n      getRelay: async () => {\r\n        console.log('Alice creates a Relay account.');\r\n        console.log('Alice shares it with Bob outside of the network.');\r\n        return accRelay.networkAccount;\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleBob = async () => {\r\n    console.log(\"Handling bob ...\")\r\n    let { INFO, ADDR, SK, MNE } = query\r\n    const accRelay = REACT_APP_NETWORK === 'ETH'\r\n      ? await stdlib.newAccountFromMnemonic(MNE)\r\n      : await stdlib.newAccountFromSecret(Uint8Array.from(SK.split(',').map(el => +el)))\r\n    stdlib.transfer(state.acc, accRelay, stdlib.parseCurrency(1))\r\n    const ctcRelay = accRelay.attach(backend, REACT_APP_NETWORK === 'ETH' ? ADDR : INFO);\r\n    return backend.Relay(ctcRelay, {\r\n      getBob: async () => {\r\n        console.log('Bob, acting as the Relay gives his information.');\r\n        return state.acc.networkAccount;\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-5\">\r\n        <Col>\r\n          <h1 className=\"text-center\">{title.toUpperCase()}</h1>\r\n        </Col>\r\n        <Col className=\"text-center\" xs={12}>\r\n          This runs on the <a href=\"https://testnet.algoexplorer.io/\">Algorand Test Net</a>. Need funds? Try <a href=\"https://bank.testnet.algorand.network/\">Algorand dispenser.</a>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-5 role role-participant\">\r\n        <ButtonGroup as={Col} xs={2} size=\"lg\">\r\n          {!state.acc && <Button onClick={handleConnect}>Connect</Button>}\r\n          {hasFaucet(state.acc) && <Button variant=\"secondary\" onClick={handleFaucet}>Faucet</Button>}\r\n        </ButtonGroup>\r\n      </Row>\r\n      {state.acc && <Row>\r\n        {[\r\n          'addr',\r\n          'bal'\r\n        ].map(name =>\r\n          <Col xs={12}>{name}: {state[name]}</Col>\r\n        )}\r\n      </Row>}\r\n      <Row className=\"mt-5 role role-alice\">\r\n        <Col xs={12} className=\"mb-3\">\r\n          <h2>\r\n            Send funds\r\n          </h2>\r\n        </Col>\r\n        <Col xs={3}>\r\n          <Form.Control name=\"AMT\" size=\"lg\" type=\"text\" placeholder=\"Amount\" onChange={handleChange} />\r\n        </Col>\r\n        <Col xs={3}>\r\n          <Button size=\"lg\" onClick={handleAlice} disabled={!state.acc}>Send</Button>\r\n        </Col>\r\n        {state.ctcInfo &&\r\n          <Col xs={12}>\r\n            info: <br />\r\n            {state.ctcInfo}\r\n          </Col>}\r\n        {state.relay.acc &&\r\n          REACT_APP_NETWORK === 'ETH' ? (\r\n          <Col xs={12}>\r\n            mnemonic phrase: <br />\r\n            {state.relay.acc?.networkAccount?.mnemonic?.phrase}\r\n          </Col>) : ( state.relay.acc?.networkAccount &&\r\n            <Col xs={12}>\r\n            secret: <br />\r\n            {state.relay.acc.networkAccount.sk.toString()}\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      <Row className=\"mt-5 role role-bob\">\r\n        <Col xs={12} className=\"mb-3\">\r\n          <h2>Receive funds</h2>\r\n        </Col>\r\n        <Col xs={3}>\r\n          <Form.Control name={REACT_APP_NETWORK === 'ETH' ? \"ADDR\" : \"INFO\"} size=\"lg\" type=\"text\" placeholder=\"Info\" onChange={handleChange} />\r\n        </Col>\r\n\r\n        {REACT_APP_NETWORK === 'ETH' ? (\r\n          <Col xs={6}>\r\n            <Form.Control name=\"MNE\" size=\"lg\" type=\"text\" placeholder=\"Mnemonic\" onChange={handleChange} />\r\n          </Col>\r\n        ) : (\r\n          <Col xs={6}>\r\n            <Form.Control name=\"SK\" size=\"lg\" type=\"text\" placeholder=\"Secret\" onChange={handleChange} />\r\n          </Col>\r\n        )}\r\n        <Col xs={3}>\r\n          <Button size=\"lg\" onClick={handleBob} disabled={!state.acc}>Receive</Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}